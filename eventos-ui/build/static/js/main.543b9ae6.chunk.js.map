{"version":3,"sources":["components/template/NavBar.jsx","components/pages/Home.jsx","components/events/forms/CreateEvent.jsx","components/events/EventList.jsx","components/events/templates/StatusComponent.jsx","components/events/forms/AddGuest.jsx","components/events/templates/GuestTools.jsx","components/events/templates/GuestList.jsx","components/events/templates/GuestComponent.jsx","components/events/EventDetails.jsx","functions/StorageFunctions.js","components/pages/Events.jsx","components/auth/SignInWidget.jsx","components/auth/Login.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","Link","to","Component","withAuth","_Component","Home","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","authenticated","checkAuthentication","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","auth","isAuthenticated","sent","stop","login","_callee2","_context2","logout","_callee3","_context3","inherits","createClass","key","value","_componentDidMount","_callee4","_context4","_componentDidUpdate","_callee5","_context5","mainContent","CreateEvent","handleChangeNameField","event","text","target","changeName","handleChangeTablesField","changeTables","handleChangeSpacesField","changeSpaces","Form","FormGroup","Label","for","Input","onChange","type","name","id","placeholder","Row","form","Col","md","min","max","EventList","eventName","eventTables","eventSpaces","eventFree","modalCreateEvent","toggleModalCreateEvent","handleNameField","handleTablesField","handleSpacesField","callCreateEvent","createEvent","callEventInfo","eventInfo","renderEventList","array","i","events","element","free","n_spaces","tables","confirm","push","Card","CardBody","react_fontawesome_index_es","icon","guest","Button","CardHeader","Modal","ModalHeader","ModalBody","forms_CreateEvent","ModalFooter","CardFooter","StatusComponent","spaces","AddGuest","getEmptySpaces","table","spaceLimit","spaceSum","assign_tables","parseInt","n_guest","renderTablesAsigned","evaluateForm","total","tableEmptySpaces","evaluateSpaces","flag","_this2","maxLength","setName","setTotal","InputGroup","InputGroupAddon","addonType","InputGroupText","GuestTools","modalAddGuest","inputSearch","empty","toggleModalAddGuest","sendTextToSearch","search","setEmpty","size","forms_AddGuest","GuestList","renderGuestList","guestArray","list","GuestComponent","searchGuest","resArray","indexOf","nextProps","templates_GuestTools","templates_GuestList","EventDetails","modalConfirm","dropdownTables","toggleModalConfirm","toggleDropdownTables","outline","ButtonDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","ListGroup","ListGroupItem","templates_StatusComponent","templates_GuestComponent","StorageFunctions","require","registry","json","err","console","log","Events","storage","eventsArray","sendEventInfo","currentUserName","currentUserMail","idToken","JSON","parse","localStorage","getItem","claims","email","events_EventList","getEventsList","events_EventDetails","SignInWidget","el","ReactDOM","findDOMNode","widget","OktaSignIn","baseUrl","logo","renderEl","onSuccess","onError","remove","Login","res","redirect","sessionToken","session","token","_checkAuthentication","Redirect","pathname","auth_SignInWidget","library","add","fas","fab","config","issuer","redirect_uri","window","location","origin","client_id","App","BrowserRouter","dist","template_NavBar","Route","path","exact","component","render","auth_Login","ImplicitCallback","Boolean","hostname","match","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.543b9ae6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem\r\n} from 'reactstrap';\r\n\r\nclass NavBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = { isOpen: false };\r\n    }\r\n    toggle() { this.setState({ isOpen: !this.state.isOpen }); }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar color=\"light\" light expand=\"sm\">\r\n                    <NavbarBrand href=\"/\">Gestor de Eventos</NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle} />\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem> <Link className=\"nav-link\" to=\"/\"> Principal </Link> </NavItem>\r\n                            <NavItem> <Link className=\"nav-link\" to=\"/events\"> Eventos </Link> </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withAuth } from '@okta/okta-react';\r\n\r\nexport default withAuth(class Home extends Component {\r\n    state = { authenticated: null };\r\n\r\n    checkAuthentication = async () => {\r\n        const authenticated = await this.props.auth.isAuthenticated();\r\n        if (authenticated !== this.state.authenticated) { this.setState({ authenticated }); }\r\n    }\r\n\r\n    async componentDidMount() { this.checkAuthentication(); }\r\n\r\n    async componentDidUpdate() { this.checkAuthentication(); }\r\n\r\n    login = async () => { this.props.auth.login('/'); }\r\n\r\n    logout = async () => { this.props.auth.logout('/'); }\r\n\r\n    render() {\r\n        if (this.state.authenticated === null) return null;\r\n\r\n        const mainContent = this.state.authenticated ?\r\n            (\r\n                <div>\r\n                    <p className=\"lead\">You have entered the staff portal, <Link to=\"/staff\">Click here</Link></p>\r\n                    <button className=\"btn btn-primary btn-lg\" onClick={this.logout}>Logout</button>\r\n                </div>\r\n            )\r\n            :\r\n            (\r\n                <div>\r\n                    <p className=\"lead\">If you are a staff member, please get your credentials from your Admin.</p>\r\n                    <button className=\"btn btn-dark btn-lg\" onClick={this.login}>Login</button>\r\n                </div>\r\n            )\r\n\r\n        return (\r\n            <div className=\"jumbotron\">\r\n                <h1 className=\"display-4\">Portal</h1>\r\n                {mainContent}\r\n            </div>\r\n        );\r\n    }\r\n});\r\n","import React, { Component } from 'react';\r\n\r\nimport { Input, Form, FormGroup, Label, Col, Row } from 'reactstrap';\r\n\r\nclass CreateEvent extends Component {\r\n\r\n    handleChangeNameField = (event) => {\r\n        const text = event.target.value;\r\n        this.props.changeName(text);\r\n    }\r\n\r\n    handleChangeTablesField = (event) => {\r\n        const text = event.target.value;\r\n        this.props.changeTables(text);\r\n    }\r\n\r\n    handleChangeSpacesField = (event) => {\r\n        const text = event.target.value;\r\n        this.props.changeSpaces(text);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form>\r\n                <FormGroup>\r\n                    <Label for=\"eventName\">Nombre del Evento</Label>\r\n                    <Input \r\n                        onChange={this.handleChangeNameField} \r\n                        type=\"text\" \r\n                        name=\"name\" \r\n                        id=\"eventName\" \r\n                        placeholder=\"Reunion, Fiesta, Boda...\" />\r\n                </FormGroup>\r\n                <Row form>\r\n                    <Col md={6}>\r\n                        <FormGroup>\r\n                            <Label for=\"noTables\">Numero de Mesas</Label>\r\n                            <Input \r\n                                onChange={this.handleChangeTablesField} \r\n                                type=\"number\" \r\n                                name=\"tables\" \r\n                                id=\"noTables\"\r\n                                min={4}\r\n                                max={100} />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <FormGroup>\r\n                            <Label for=\"spaces\">Espacios por Mesa</Label>\r\n                            <Input onChange={this.handleChangeSpacesField} type=\"select\" name=\"spaces\" id=\"spaces\">\r\n                                <option>8</option>\r\n                                <option>10</option>\r\n                                <option>12</option>\r\n                                <option>14</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateEvent;","import React, { Component } from 'react';\r\n\r\nimport {\r\n    Card, CardBody, CardHeader, CardFooter, Button,\r\n    Modal, ModalHeader, ModalBody, ModalFooter, Label\r\n} from 'reactstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n/* Components */\r\n\r\nimport CreateEvent from './forms/CreateEvent';\r\n\r\nclass EventList extends Component {\r\n    state = {\r\n        eventName: '',\r\n        eventTables: 0,\r\n        eventSpaces: 8,\r\n        eventFree: 0,\r\n        modalCreateEvent: false,\r\n    }\r\n\r\n    toggleModalCreateEvent = () => {\r\n        this.setState({\r\n            modalCreateEvent: !this.state.modalCreateEvent\r\n        });\r\n    }\r\n\r\n    handleNameField = (value) => {\r\n        this.setState({ eventName: value })\r\n    }\r\n\r\n    handleTablesField = (value) => {\r\n        this.setState({ eventTables: value })\r\n    }\r\n\r\n    handleSpacesField = (value) => {\r\n        this.setState({ eventSpaces: value })\r\n    }\r\n\r\n    callCreateEvent = () => {\r\n        this.props.createEvent(this.state.eventName, this.state.eventTables, this.state.eventSpaces);\r\n        this.toggleModalCreateEvent();\r\n    }\r\n\r\n    callEventInfo = (event) => {\r\n        this.props.eventInfo(event);\r\n    }\r\n\r\n    renderEventList = () => {\r\n        let array = [];\r\n        for (let i = 0; i < this.props.events.length; i++) {\r\n            let element = this.props.events[i];\r\n            let free = ((element.n_spaces * element.tables) - element.confirm);\r\n            array.push(\r\n                <Card key={i} className=\"card_event\">\r\n                    <CardBody className=\"event_grid\">\r\n                        <div className=\"event_icon\"><FontAwesomeIcon icon=\"users\" /></div>\r\n                        <div className=\"event_details\">\r\n                            <h5 className=\"card-title\">{element.name}</h5>\r\n                            <h6 className=\"card-subtitle mb-2 text-muted\">\r\n                                Disponibles: {free}\r\n                                - Confirmados: {element.confirm}\r\n                                - Invitados en espera: {element.guest.length}\r\n                            </h6>\r\n                        </div>\r\n                        <div className=\"event_tools\">\r\n                            <Button onClick={this.callEventInfo.bind(null, element)} color=\"info\">\r\n                                <FontAwesomeIcon icon=\"arrow-right\" />\r\n                            </Button>\r\n                        </div>\r\n                    </CardBody>\r\n                </Card>\r\n            )\r\n        }\r\n        return array;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"list_container\">\r\n                <Card>\r\n                    <CardHeader className=\"clearfix\">\r\n                        <h5 className=\"card-title generic_title\">\r\n                            Lista de Eventos\r\n                            <Button onClick={this.toggleModalCreateEvent} className=\"float-sm-right\" color=\"primary\">\r\n                                Crear Evento <FontAwesomeIcon icon=\"plus-circle\" />\r\n                            </Button>\r\n                            {/* Modal Create Event */}\r\n                            <Modal\r\n                                isOpen={this.state.modalCreateEvent}\r\n                                toggle={this.toggleModalCreateEvent}\r\n                                className={this.props.className}>\r\n                                <ModalHeader toggle={this.toggleModalCreateEvent}>Crea Evento: </ModalHeader>\r\n                                <ModalBody>\r\n                                    <div className=\"form_create_event\">\r\n                                        {/* Create Event form */}\r\n                                        <CreateEvent\r\n                                            changeName={this.handleNameField}\r\n                                            changeTables={this.handleTablesField}\r\n                                            changeSpaces={this.handleSpacesField} />\r\n                                    </div>\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <div className=\"create_modal_footer\">\r\n                                        <Label className=\"float-sm-right\" >Espacios Disponibles: {this.state.eventTables * this.state.eventSpaces}</Label>\r\n                                        <div className=\"button_section\">\r\n                                            <Button className=\"float-sm-right\" color=\"secondary\" onClick={this.toggleModalCreateEvent}>Cancelar</Button>\r\n                                            {(this.state.eventName.length) && (this.state.eventTables * this.state.eventSpaces) > 0 ? <Button className=\"float-sm-right\" color=\"primary\" onClick={this.callCreateEvent}>Crear Evento</Button> : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n                        </h5>\r\n                    </CardHeader>\r\n                    <CardBody className=\"card_body_events\">\r\n                        {/* List of Events */}\r\n                        {this.renderEventList()}\r\n                    </CardBody>\r\n                    <CardFooter>Footer</CardFooter>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventList;\r\n","import React, { Component } from 'react';\r\n\r\nimport { Card, CardBody } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass StatusComponent extends Component {\r\n    render() {\r\n        let spaces = ((this.props.event.n_spaces * this.props.event.tables) - this.props.event.confirm);\r\n        return (\r\n            <Card>\r\n                <CardBody className=\"status_grid\">\r\n                    <div className=\"status_item\">\r\n                        <FontAwesomeIcon icon=\"list-alt\" />\r\n                        <p className=\"text-muted span_event\">{spaces} Espacios Disponibles</p>\r\n                    </div>\r\n                    <div className=\"status_item\">\r\n                        <FontAwesomeIcon icon=\"user-check\" />\r\n                        <p className=\"text-muted span_event\">{this.props.event.confirm} Invitados Confirmados</p>\r\n                    </div>\r\n                    <div className=\"status_item\">\r\n                        <FontAwesomeIcon icon=\"user-circle\" />\r\n                        <p className=\"text-muted span_event\">{this.props.event.guest.length} Invitados en Espera</p>\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatusComponent;","import React, { Component } from 'react';\r\n\r\nimport {\r\n    InputGroup, InputGroupText, InputGroupAddon, Input,\r\n    Form, FormGroup, Label, Col, Row\r\n} from 'reactstrap';\r\n\r\nclass AddGuest extends Component {\r\n\r\n    getEmptySpaces = (table) => {\r\n        let spaceLimit = this.state.event.n_spaces;\r\n        let spaceSum = 0;\r\n        for (let i = 0; i < this.state.event.guest.length; i++) {\r\n            const element = this.state.event.guest[i];\r\n            if (element.assign_tables === parseInt(table)) {\r\n                spaceSum = spaceSum + element.n_guest;\r\n            }\r\n        }\r\n        const res = (spaceLimit - spaceSum);\r\n        return (res);\r\n    }\r\n\r\n    renderTablesAsigned = () => {\r\n        let array = [];\r\n        for (let i = 0; i <= this.props.event.tables; i++) {\r\n            array.push(<option key={i}>{i}</option>);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    // componentWillMount() {\r\n    //     const empty = this.getEmptySpaces(1);\r\n    //     this.setState({ tableEmptySpaces: empty });\r\n    // }\r\n\r\n    evaluateForm = () => {\r\n        if (this.state.name.length > 0 && this.state.total > 0 && this.state.tableEmptySpaces > 0) {\r\n            if (this.evaluateSpaces()) {\r\n                this.props.flag(true);\r\n            } else {\r\n                this.props.flag(false);\r\n            }\r\n        } else {\r\n            this.props.flag(false);\r\n        }\r\n    }\r\n\r\n    evaluateSpaces = () => {\r\n        if (this.state.tableEmptySpaces >= this.state.total) {\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"form_create_event\">\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label for=\"eventName\">Nombre del Invitado</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            maxLength=\"16\"\r\n                            name=\"name\"\r\n                            id=\"eventName\"\r\n                            placeholder=\"Max. 16 caracteres\"\r\n                            onChange={(event) => { this.props.setName(event); }} />\r\n                    </FormGroup>\r\n                    <Row form>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label\r\n                                    for=\"noGuest\">Numero de Acompañantes</Label>\r\n                                <Input\r\n                                    placeholder={\r\n                                        'Max. ' +\r\n\r\n                                        ' personas'}\r\n                                    max={10}\r\n                                    min={1}\r\n                                    type=\"number\"\r\n                                    name=\"noGuest\"\r\n                                    id=\"noGuest\"\r\n                                    onChange={(event) => { this.props.setTotal(event) }} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <Label for=\"table\">Mesa Asignada</Label>\r\n                            <InputGroup>\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        Disponibles\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"table\"\r\n                                    id=\"table\">\r\n                                    {this.renderTablesAsigned()}\r\n                                </Input>\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddGuest;","import React, { Component } from 'react';\r\n\r\nimport {\r\n    CardHeader, Button,\r\n    InputGroup, InputGroupText, InputGroupAddon, Input,\r\n    Modal, ModalHeader, ModalBody, ModalFooter\r\n} from 'reactstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n/* Components */\r\nimport AddGuest from '../forms/AddGuest';\r\n\r\nclass GuestTools extends Component {\r\n\r\n\r\n    state = {\r\n        modalAddGuest: false,\r\n        inputSearch: '',\r\n        name: '',\r\n        total: 0,\r\n        empty: 0,\r\n        flag: false\r\n    }\r\n\r\n    toggleModalAddGuest = () => {\r\n        this.setState({\r\n            modalAddGuest: !this.state.modalAddGuest,\r\n            flag: false\r\n        });\r\n    }\r\n\r\n\r\n    sendTextToSearch = (event) => {\r\n        let text = event.target.value;\r\n        this.props.search(text);\r\n    }\r\n\r\n    evaluateForm = () => {\r\n        if (this.state.name.length > 0 && this.state.total > 0 && this.state.tableEmptySpaces > 0) {\r\n            if (this.evaluateSpaces()) {\r\n                this.props.flag(true);\r\n            } else {\r\n                this.props.flag(false);\r\n            }\r\n        } else {\r\n            this.props.flag(false);\r\n        }\r\n    }\r\n\r\n    evaluateSpaces = () => {\r\n        if (this.state.tableEmptySpaces >= this.state.total) {\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n\r\n    \r\n\r\n    /*  */\r\n\r\n    setName = (event) => {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n\r\n    setTotal = (event) => {\r\n        this.setState({ total: event.target.value });\r\n    }\r\n\r\n    setEmpty = (event) => {\r\n        this.setState({ empty: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CardHeader className=\"guest_header\">\r\n                <div className=\"guest_finder\">\r\n                    <InputGroup>\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText >\r\n                                <FontAwesomeIcon icon=\"search\" />\r\n                            </InputGroupText>\r\n                            <Input\r\n                                value={this.state.value}\r\n                                onChange={this.sendTextToSearch}\r\n                                placeholder=\"Buscar invitado\"\r\n                                size=\"sm\" />\r\n                        </InputGroupAddon>\r\n                    </InputGroup>\r\n                </div>\r\n                <div className=\"guest_add\">\r\n                    <Button\r\n                        size=\"sm\"\r\n                        onClick={this.toggleModalAddGuest}\r\n                        className=\"float-sm-right\"\r\n                        color=\"primary\">\r\n                        Agregar Invitado <FontAwesomeIcon icon=\"plus-circle\" />\r\n                    </Button>\r\n                    {/* Modal Add Guest */}\r\n                    <Modal\r\n                        isOpen={this.state.modalAddGuest}\r\n                        toggle={this.toggleModalAddGuest}\r\n                        className={this.props.className}>\r\n                        <ModalHeader toggle={this.toggleModalAddGuest}>Agregar Invitado </ModalHeader>\r\n                        <ModalBody>\r\n                            {/* Add Guest Form */}\r\n                            <AddGuest\r\n                                setName={this.setName}\r\n                                setTotal={this.setTotal}\r\n                                setEmpty={this.setEmpty}\r\n                                event={this.props.event}\r\n                                 />\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            {this.state.flag ? <Button color=\"primary\" onClick={this.toggleModalAddGuest}>Añadir Invitado</Button> : null}\r\n                            <Button color=\"secondary\" onClick={this.toggleModalAddGuest}>Cancelar</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </div>\r\n            </CardHeader>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GuestTools;","import React, { Component } from 'react';\r\n\r\nimport { Card, CardBody, Button } from 'reactstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass GuestList extends Component {\r\n\r\n    renderGuestList = () => {\r\n        let guestArray = [];\r\n        for (let i = 0; i < this.props.list.length; i++) {\r\n            const element = this.props.list[i];\r\n            guestArray.push(\r\n                <Card key={i} className=\"guest_card\">\r\n                    <div className=\"guest_title\">{element.name}</div>\r\n                    <div className=\"guest_tables\">{element.assign_tables}</div>\r\n                    <div className=\"guest_subguest\">{element.n_guest}</div>\r\n                    <div className=\"guest_tools\">\r\n                        <Button size=\"sm\" color=\"warning\"> <FontAwesomeIcon icon=\"edit\" /> </Button>\r\n                        <Button size=\"sm\" color=\"danger\"> <FontAwesomeIcon icon=\"trash\" /> </Button>\r\n                    </div>\r\n                </Card>\r\n            );\r\n        }\r\n        return guestArray;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CardBody className=\"guest_list\" >\r\n                {/* GuestList */}\r\n                <div className=\"guest_list_header\">\r\n                    <div>Nombre: </div>\r\n                    <div>Mesa: </div>\r\n                    <div>Invitados: </div>\r\n                    <div>Editar/Eliminar: </div>\r\n                </div>\r\n                <div className=\"guest_list_container\">\r\n                    {this.renderGuestList()}\r\n                </div>\r\n            </CardBody>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GuestList;","import React, { Component } from 'react';\r\n\r\nimport { Card } from 'reactstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n/* Components */\r\nimport GuestTools from './GuestTools';\r\nimport GuestList from './GuestList';\r\n\r\nclass GuestComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: props.event.guest\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({ list: nextProps.event.guest });\r\n    }\r\n\r\n    searchGuest = (guest) => {\r\n        let guestArray = this.props.event.guest;\r\n        let resArray = [];\r\n        for (let i = 0; i < guestArray.length; i++) {\r\n            if (guestArray[i].name.indexOf(guest) !== -1) {\r\n                resArray.push(guestArray[i]);\r\n            }\r\n        }\r\n        this.setState({ list: resArray });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"guest_container\">\r\n                <GuestTools\r\n                    event={this.props.event}\r\n                    search={this.searchGuest} />\r\n                <GuestList\r\n                    list={this.state.list} />\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GuestComponent;","import React, { Component } from 'react';\r\n\r\nimport {\r\n    Card, CardBody,\r\n    CardHeader, CardFooter, Button,\r\n    InputGroup, InputGroupText, InputGroupAddon, Input,\r\n    Modal, ModalHeader, ModalBody, ModalFooter,\r\n    Form, FormGroup, Label, Col, Row,\r\n    ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem,\r\n    ListGroup, ListGroupItem\r\n} from 'reactstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n/* Components */\r\nimport StatusComponent from './templates/StatusComponent';\r\nimport GuestComponent from './templates/GuestComponent';\r\n\r\nclass EventDetails extends Component {\r\n    state = {\r\n        modalConfirm: false,\r\n        dropdownTables: false\r\n    }\r\n\r\n    toggleModalConfirm = () => {\r\n        this.setState({\r\n            modalConfirm: !this.state.modalConfirm\r\n        });\r\n    }\r\n\r\n    toggleDropdownTables = () => {\r\n        this.setState({\r\n            dropdownTables: !this.state.dropdownTables\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.props.eventInfo !== '') {\r\n            return (\r\n                <Card>\r\n                    <CardHeader className=\"event_header_card\">\r\n                        <h5 className=\"card-title generic_title\">{this.props.eventInfo.name}</h5>\r\n                        <Button onClick={this.toggleModalConfirm} outline color=\"primary\">Confirmar Cita</Button>\r\n                        {/* Modal Confirm Guest */}\r\n                        <Modal\r\n                            size=\"lg\"\r\n                            isOpen={this.state.modalConfirm}\r\n                            toggle={this.toggleModalConfirm}\r\n                            className={this.props.className}>\r\n                            <ModalHeader toggle={this.toggleModalConfirm}>Confirmar Invitados</ModalHeader>\r\n                            <ModalBody>\r\n                                <div className=\"confirm_event_container\">\r\n                                    <div className=\"confirm_event_tools\">\r\n                                        <ButtonDropdown className=\"float-sm-left\" isOpen={this.state.dropdownTables} toggle={this.toggleDropdownTables}>\r\n                                            <DropdownToggle caret size=\"sm\">\r\n                                                Mesa\r\n                                                </DropdownToggle>\r\n                                            <DropdownMenu>\r\n                                                <DropdownItem>1</DropdownItem>\r\n                                                <DropdownItem>2</DropdownItem>\r\n                                            </DropdownMenu>\r\n                                        </ButtonDropdown>\r\n                                    </div>\r\n                                    <div className=\"confirm_event_report\">\r\n                                        <div className=\"confirm_guest_list\">\r\n                                            <Card className=\"confirm_guest_list_card\">\r\n                                                <CardHeader> <h5 className=\"card-title\">Invitados</h5></CardHeader>\r\n                                                <CardBody>\r\n                                                    <div className=\"confirm_header_list\">\r\n                                                        <div className=\"header_item\">Nombre:</div>\r\n                                                        <div className=\"header_item\">Mesa:</div>\r\n                                                        <div className=\"header_item\">Confirmación:</div>\r\n                                                    </div>\r\n                                                    <Card className=\"confirm_guest_item\">\r\n                                                        <div className=\"confirm_guest_item_title\">Raúl Reza</div>\r\n                                                        <div className=\"confirm_guest_item_table\">3</div>\r\n                                                        <Button size=\"sm\" outline color=\"success\">Add</Button>\r\n                                                    </Card>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </div>\r\n                                        <div className=\"confirm_table_report\">\r\n                                            <Card className=\"confirm_table_report_card\">\r\n                                                <CardHeader> <h5 className=\"card-title\">Información de la mesa: 1</h5></CardHeader>\r\n                                                <CardBody className=\"confirm_table_report_grid\">\r\n                                                    <Card className=\"confirm_table_details\">\r\n                                                        <div className=\"confirm_table_details_item\">Nombre:</div>\r\n                                                        <div className=\"confirm_table_details_item\">Confirmados 3 de 15</div>\r\n                                                    </Card>\r\n                                                    <Card className=\"confirm_table_guest_report\">\r\n                                                        <ListGroup>\r\n                                                            <ListGroupItem>Cras justo odio</ListGroupItem>\r\n                                                            <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\r\n                                                            <ListGroupItem>Morbi leo risus</ListGroupItem>\r\n                                                            <ListGroupItem>Porta ac consectetur ac</ListGroupItem>\r\n                                                            <ListGroupItem>Vestibulum at eros</ListGroupItem>\r\n                                                            <ListGroupItem>Vestibulum at eros</ListGroupItem>\r\n                                                            <ListGroupItem>Vestibulum at eros</ListGroupItem>\r\n                                                            <ListGroupItem>Vestibulum at eros</ListGroupItem>\r\n                                                        </ListGroup>\r\n                                                    </Card>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ModalBody>\r\n                        </Modal>\r\n                    </CardHeader>\r\n                    <CardBody className=\"details_grid\">\r\n                        <StatusComponent event={this.props.eventInfo}/>\r\n                        <GuestComponent event={this.props.eventInfo} />\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                        <h6 className=\"card-subtitle mb-2 text-muted\">No. de Mesas: 14 - Espacios por Mesa: 10</h6>\r\n                    </CardFooter>\r\n                </Card>\r\n            );\r\n        } else {\r\n            return (<h1>Nell perro</h1>);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default EventDetails;","import json from '../data/raul.json';\r\nconst fs = require('fs');\r\n\r\nclass StorageFunctions {\r\n    registry = json;\r\n    init() {\r\n\r\n    }\r\n\r\n    createEvent(name, tables, spaces) {\r\n        try {\r\n            let event = {\r\n                name: name,\r\n                tables: tables,\r\n                n_spaces: spaces,\r\n                confirm: 0,\r\n                guest: []\r\n            }\r\n            this.registry.events.push(event);\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    getEventsList() {\r\n        return this.registry.events;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default StorageFunctions;","import React, { Component } from 'react';\r\nimport './Events.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n/* Components */\r\nimport EventList from '../events/EventList';\r\nimport EventDetails from '../events/EventDetails';\r\n\r\n/* Constants */\r\nimport StorageFunctions from '../../functions/StorageFunctions';\r\n\r\n\r\nclass Events extends Component {\r\n    storage = new StorageFunctions;\r\n    eventsArray = [];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentUserName: '',\r\n            currentUserMail: '',\r\n            eventInfo: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const idToken = JSON.parse(localStorage.getItem('okta-token-storage'));\r\n        this.setState({\r\n            currentUserMail: idToken.idToken.claims.email,\r\n            currentUserName: idToken.idToken.claims.name\r\n        });\r\n    }\r\n\r\n    createEvent = (name, tables, spaces) => {\r\n        this.storage.createEvent(name, tables, spaces);\r\n    }\r\n\r\n    sendEventInfo = (event) => {\r\n        this.setState({ eventInfo: event })\r\n    }\r\n\r\n    render() {\r\n        // const { currentUserMail, currentUserName } = this.state;\r\n        return (\r\n            < div className=\"event_dashboard\" >\r\n                <EventList\r\n                    events={this.storage.getEventsList()}\r\n                    createEvent={this.createEvent}\r\n                    eventInfo={this.sendEventInfo} />\r\n                <EventDetails eventInfo={this.state.eventInfo} />\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Events;\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OktaSignIn from '@okta/okta-signin-widget';\r\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css';\r\nimport '@okta/okta-signin-widget/dist/css/okta-theme.css';\r\n\r\nclass SignInWidget extends Component {\r\n  componentDidMount() {\r\n    const el = ReactDOM.findDOMNode(this);\r\n    this.widget = new OktaSignIn({\r\n      baseUrl: this.props.baseUrl,\r\n      logo: 'logo.png'\r\n    });\r\n    this.widget.renderEl({ el }, this.props.onSuccess, this.props.onError);\r\n  }\r\n\r\n  componentWillUnmount() { this.widget.remove(); }\r\n\r\n  render() { return <div />; }\r\n}\r\n\r\nexport default SignInWidget;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport SignInWidget from './SignInWidget';\r\nimport { withAuth } from '@okta/okta-react';\r\n\r\nexport default withAuth(\r\n  class Login extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        authenticated: null\r\n      };\r\n      this.checkAuthentication();\r\n    }\r\n\r\n    async checkAuthentication() {\r\n      const authenticated = await this.props.auth.isAuthenticated();\r\n      if (authenticated !== this.state.authenticated) {\r\n        this.setState({ authenticated });\r\n      }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      this.checkAuthentication();\r\n    }\r\n\r\n    onSuccess = res => {\r\n      return this.props.auth.redirect({\r\n        sessionToken: res.session.token\r\n      });\r\n    };\r\n\r\n    onError = err => {\r\n      console.log('error logging in', err);\r\n    };\r\n\r\n    render() {\r\n      if (this.state.authenticated === null) return null;\r\n      return this.state.authenticated ? (\r\n        <Redirect to={{ pathname: '/' }} />\r\n      ) : (\r\n        <SignInWidget\r\n          baseUrl={this.props.baseUrl}\r\n          onSuccess={this.onSuccess}\r\n          onError={this.onError}\r\n        />\r\n      );\r\n    }\r\n  }\r\n);","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Security, SecureRoute, ImplicitCallback } from '@okta/okta-react';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\n\r\n\r\n/* Components */\r\nimport Navbar from './components/template/NavBar';\r\nimport Home from './components/pages/Home';\r\nimport Events from './components/pages/Events';\r\nimport Login from './components/auth/Login';\r\n\r\nlibrary.add(fas, fab);\r\n\r\nconst config = {\r\n  issuer: 'https://dev-917519.oktapreview.com/oauth2/default',\r\n  redirect_uri: window.location.origin + '/implicit/callback',\r\n  client_id: '0oaj1kv24yYQSExTt0h7'\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Security issuer={config.issuer}\r\n          client_id={config.client_id}\r\n          redirect_uri={config.redirect_uri}\r\n        >\r\n          <div className=\"App\">\r\n            <Navbar />\r\n            <div className=\"app_container\">\r\n              <Route path=\"/\" exact={true} component={Home} />\r\n              <SecureRoute path=\"/events\" exact={true} component={Events} />\r\n              <Route\r\n                path=\"/login\"\r\n                render={() => (\r\n                  < Login baseUrl='https://dev-917519.oktapreview.com/oauth2/default' />\r\n                )} />\r\n              <Route path=\"/implicit/callback\" component={ImplicitCallback} />\r\n            </div>\r\n          </div>\r\n        </Security>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}